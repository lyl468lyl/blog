import{_ as p,r as o,o as c,c as i,a as n,b as s,d as e,e as t}from"./app-c9231c3a.js";const l={},u=t(`<h1 id="electron项目初始化" tabindex="-1"><a class="header-anchor" href="#electron项目初始化" aria-hidden="true">#</a> electron项目初始化</h1><h2 id="_1-开发目录生成" tabindex="-1"><a class="header-anchor" href="#_1-开发目录生成" aria-hidden="true">#</a> 1. 开发目录生成</h2><ul><li><p>创建 umi 项目并安装electron</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">yarn</span> create umi // 完成文件初始化操作
<span class="token function">yarn</span> <span class="token function">add</span> electron <span class="token parameter variable">--dev</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="_2-添加main-js" tabindex="-1"><a class="header-anchor" href="#_2-添加main-js" aria-hidden="true">#</a> 2. 添加main.js</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> app<span class="token punctuation">,</span> BrowserWindow <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;electron&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">createWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">// Create the browser window.</span>
<span class="token keyword">const</span> mainWindow <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BrowserWindow</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">800</span><span class="token punctuation">,</span>
  <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">600</span><span class="token punctuation">,</span>
  <span class="token literal-property property">webPreferences</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">nodeIntegration</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> urlLocation <span class="token operator">=</span> app<span class="token punctuation">.</span>isPackaged <span class="token operator">?</span> <span class="token string">&#39;http://localhost:8000&#39;</span> <span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">file://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;./dist/index.html&#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>

mainWindow<span class="token punctuation">.</span><span class="token function">loadURL</span><span class="token punctuation">(</span>urlLocation<span class="token punctuation">)</span>

<span class="token comment">// 开发环境下支持F1打开控制台</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>app<span class="token punctuation">.</span>isPackaged<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  globalShortcut<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">&#39;F1&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>mainWindow<span class="token punctuation">.</span>webContents<span class="token punctuation">.</span>devToolsWebContents<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      mainWindow<span class="token punctuation">.</span>webContents<span class="token punctuation">.</span><span class="token function">closeDevTools</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      mainWindow<span class="token punctuation">.</span>webContents<span class="token punctuation">.</span><span class="token function">openDevTools</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// 开发环境下支持F5刷新页面</span>
globalShortcut<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">&#39;F5&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  win<span class="token punctuation">.</span>webContents<span class="token punctuation">.</span><span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
app<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;ready&#39;</span><span class="token punctuation">,</span> createWindow<span class="token punctuation">)</span>

<span class="token comment">// Quit when all windows are closed.</span>
app<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;window-all-closed&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>platform <span class="token operator">!==</span> <span class="token string">&#39;darwin&#39;</span><span class="token punctuation">)</span> app<span class="token punctuation">.</span><span class="token function">quit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

app<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;activate&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>BrowserWindow<span class="token punctuation">.</span><span class="token function">getAllWindows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token function">createWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-修改package-json" tabindex="-1"><a class="header-anchor" href="#_3-修改package-json" aria-hidden="true">#</a> 3. 修改package.json</h2><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ant-design-pro&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.0.0&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;private&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;main&quot;</span><span class="token operator">:</span> <span class="token string">&quot;main.js&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;An out-of-box UI solution for enterprise applications&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;umi build&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token string">&quot;umi dev&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;start:dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cross-env REACT_APP_ENV=dev MOCK=none umi dev&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;dev:electron&quot;</span><span class="token operator">:</span> <span class="token string">&quot;concurrently \\&quot;wait-on http://localhost:8000 &amp;&amp; electron .\\&quot;  \\&quot; yarn start\\&quot; &quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="注意" tabindex="-1"><a class="header-anchor" href="#注意" aria-hidden="true">#</a> 注意</h3><p>由于需要同时运行yarn start 命令结束时运行yarn electron的命令启动electron所以需要用到concurrently。命令存在先后顺序需要使用wait-on。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">add</span> concurrently wait-on  <span class="token parameter variable">--dev</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,10),r={href:"https://segmentfault.com/a/1190000019607202?utm_source=tag-newest",target:"_blank",rel:"noopener noreferrer"},d=t(`<h2 id="_4-使用electron-builder打包" tabindex="-1"><a class="header-anchor" href="#_4-使用electron-builder打包" aria-hidden="true">#</a> 4.使用electron-builder打包</h2><p>使用命令安装electron-builder</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">add</span> electron-builder  <span class="token parameter variable">--dev</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>注意：</p><p>由于网络问题，需要添加环境变量 <code>ELECTRON_MIRROR：&lt;https://npmmirror.com/mirrors/electron/&gt;</code></p>`,5),k={href:"https://npmmirror.com/mirrors/",target:"_blank",rel:"noopener noreferrer"},v=t(`<h2 id="_5-使用electron-packager打包" tabindex="-1"><a class="header-anchor" href="#_5-使用electron-packager打包" aria-hidden="true">#</a> 5.使用electron-packager打包</h2><blockquote><p>此打包方式无法生成exe文件</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">add</span> electron-builder  <span class="token parameter variable">--dev</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>修改package.json文件</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  ...
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;electron_build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;electron-packager . 软件名称 --out BuildApp --arch=x64 --icon ./public/icon.ico  --overwrite  --asar --ignore=node_modules&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
  ...
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="electron与node对应版本" tabindex="-1"><a class="header-anchor" href="#electron与node对应版本" aria-hidden="true">#</a> electron与node对应版本</h2>`,6),m={href:"https://releases.electronjs.org/releases.json",target:"_blank",rel:"noopener noreferrer"};function b(h,g){const a=o("ExternalLinkIcon");return c(),i("div",null,[u,n("p",null,[s("更多技巧参考查看"),n("a",r,[s("https://segmentfault.com/a/1190000019607202?utm_source=tag-newest"),e(a)])]),d,n("blockquote",null,[n("p",null,[s("淘宝镜像地址："),n("a",k,[s("https://npmmirror.com/mirrors/"),e(a)])])]),v,n("p",null,[s("访问 "),n("a",m,[s("https://releases.electronjs.org/releases.json"),e(a)]),s(" 查看对应关系")])])}const q=p(l,[["render",b],["__file","electron.html.vue"]]);export{q as default};
