import{_ as n,o as s,c as a,e as p}from"./app-03280341.js";const t={},e=p(`<h1 id="flink-教程" tabindex="-1"><a class="header-anchor" href="#flink-教程" aria-hidden="true">#</a> flink 教程</h1><p>![image-20220224134726762](/Users/li/Library/Application Support/typora-user-images/image-20220224134726762.png)</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>import org.apache.flink.util.Collector;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>![image-20220224141659600](/Users/li/Library/Application Support/typora-user-images/image-20220224141659600.png)![image-20220224143449868](/Users/li/Library/Application Support/typora-user-images/image-20220224143449868.png)</p><p>![image-20220224143916848](/Users/li/Library/Application Support/typora-user-images/image-20220224143916848.png)</p><p>![image-20220224165907031](/Users/li/Library/Application Support/typora-user-images/image-20220224165907031.png)</p><p>![image-20220224170428662](/Users/li/Library/Application Support/typora-user-images/image-20220224170428662.png)</p><p>批处理一下看结果</p><p>![image-20220224171339646](/Users/li/Library/Application Support/typora-user-images/image-20220224171339646.png)</p><p>流数据图</p><p>![image-20220224172436918](/Users/li/Library/Application Support/typora-user-images/image-20220224172436918.png)</p><p>![image-20220224173123783](/Users/li/Library/Application Support/typora-user-images/image-20220224173123783.png)</p><p>![image-20220225115040072](/Users/li/Library/Application Support/typora-user-images/image-20220225115040072.png)</p><p>![image-20220225153752332](/Users/li/Library/Application Support/typora-user-images/image-20220225153752332.png)</p><div class="language-perl line-numbers-mode" data-ext="perl"><pre class="language-perl"><code><span class="token filehandle symbol">&lt;build&gt;</span>
        <span class="token filehandle symbol">&lt;plugins&gt;</span>
            <span class="token filehandle symbol">&lt;plugin&gt;</span>
                <span class="token filehandle symbol">&lt;groupId&gt;</span>org<span class="token operator">.</span>apache<span class="token operator">.</span>maven<span class="token operator">.</span>plugins<span class="token filehandle symbol">&lt;/groupId&gt;</span>
                <span class="token filehandle symbol">&lt;artifactId&gt;</span>maven<span class="token operator">-</span>compiler<span class="token operator">-</span>plugin<span class="token filehandle symbol">&lt;/artifactId&gt;</span>
                <span class="token filehandle symbol">&lt;version&gt;</span><span class="token v-string string">2.0.2</span><span class="token filehandle symbol">&lt;/version&gt;</span>
                <span class="token filehandle symbol">&lt;configuration&gt;</span>
                    <span class="token filehandle symbol">&lt;source&gt;</span><span class="token number">1.8</span><span class="token filehandle symbol">&lt;/source&gt;</span>
                    <span class="token filehandle symbol">&lt;target&gt;</span><span class="token number">1.8</span><span class="token filehandle symbol">&lt;/target&gt;</span>
                <span class="token filehandle symbol">&lt;/configuration&gt;</span>
            <span class="token filehandle symbol">&lt;/plugin&gt;</span>
        <span class="token filehandle symbol">&lt;/plugins&gt;</span>
    <span class="token filehandle symbol">&lt;/build&gt;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>![image-20220226122515811](/Users/li/Library/Application Support/typora-user-images/image-20220226122515811.png)</p><p>![image-20220226122634302](/Users/li/Library/Application Support/typora-user-images/image-20220226122634302.png)</p><p>![image-20220226122804323](/Users/li/Library/Application Support/typora-user-images/image-20220226122804323.png)</p><p>![](/Users/li/Library/Application Support/typora-user-images/image-20220226125726115.png)</p><p>![image-20220226130214568](/Users/li/Library/Application Support/typora-user-images/image-20220226130214568.png)</p><p>![image-20220226130458182](/Users/li/Library/Application Support/typora-user-images/image-20220226130458182.png)</p><p>![image-20220226130547654](/Users/li/Library/Application Support/typora-user-images/image-20220226130547654.png)</p><p>![image-20220226131003808](/Users/li/Library/Application Support/typora-user-images/image-20220226131003808.png)</p><div class="language-perl line-numbers-mode" data-ext="perl"><pre class="language-perl"><code>
<span class="token punctuation">[</span>root<span class="token variable">@centos01</span> bin<span class="token punctuation">]</span><span class="token comment"># ./flink run -c com.big2333.flink.StreamCount -p 1  /opt/module/data/FlinkData-1.0-SNAPSHOT.jar --host 192.168.0.185 --port 7777</span>
Job has been submitted with JobID 48dfd097188a49c48753024c027b748c

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>![image-20220226153450479](/Users/li/Library/Application Support/typora-user-images/image-20220226153450479.png)</p><p>![image-20220226153907024](/Users/li/Library/Application Support/typora-user-images/image-20220226153907024.png)</p><p>![image-20220226154424950](/Users/li/Library/Application Support/typora-user-images/image-20220226154424950.png)</p><p>![image-20220226160008919](/Users/li/Library/Application Support/typora-user-images/image-20220226160008919.png)</p><p>![image-20220226160616797](/Users/li/Library/Application Support/typora-user-images/image-20220226160616797.png)</p><p>![image-20220226162125107](/Users/li/Library/Application Support/typora-user-images/image-20220226162125107.png)</p><p>![image-20220226181731608](/Users/li/Library/Application Support/typora-user-images/image-20220226181731608.png)</p><p>提交的过程的send dataflow flink run</p><p>命令会生成数据流图</p><p>![image-20220226190537450](/Users/li/Library/Application Support/typora-user-images/image-20220226190537450.png)</p><p>![image-20220226190554406](/Users/li/Library/Application Support/typora-user-images/image-20220226190554406.png)</p><p>![image-20220226191200332](/Users/li/Library/Application Support/typora-user-images/image-20220226191200332.png)</p><p>![image-20220226191903149](/Users/li/Library/Application Support/typora-user-images/image-20220226191903149.png)</p><p>![image-20220226192120487](/Users/li/Library/Application Support/typora-user-images/image-20220226192120487.png)</p><p>![image-20220226193028853](/Users/li/Library/Application Support/typora-user-images/image-20220226193028853.png)</p><p>![image-20220226194139431](/Users/li/Library/Application Support/typora-user-images/image-20220226194139431.png)</p><p>![image-20220226195336911](/Users/li/Library/Application Support/typora-user-images/image-20220226195336911.png)</p><p>![image-20220226195457811](/Users/li/Library/Application Support/typora-user-images/image-20220226195457811.png)</p><p>![image-20220227090320727](/Users/li/Library/Application Support/typora-user-images/image-20220227090320727.png)</p><p>![image-20220227090417402](/Users/li/Library/Application Support/typora-user-images/image-20220227090417402.png)</p><p>![image-20220227091938935](/Users/li/Library/Application Support/typora-user-images/image-20220227091938935.png)</p><p>![image-20220227092757860](/Users/li/Library/Application Support/typora-user-images/image-20220227092757860.png)</p><p>![image-20220227092852667](/Users/li/Library/Application Support/typora-user-images/image-20220227092852667.png)</p><p>![image-20220227093449496](/Users/li/Library/Application Support/typora-user-images/image-20220227093449496.png)</p><p>![image-20220227094232213](/Users/li/Library/Application Support/typora-user-images/image-20220227094232213.png)</p><p>![image-20220227101330289](/Users/li/Library/Application Support/typora-user-images/image-20220227101330289.png)</p><p>flink: shuffe 发牌 ,slot 就是一个分区,一个独立的内存.</p><p>任务和任务传输: 序列化,反序列化,包装</p><p>spark shuffle 把已有的数据分堆</p><p>![image-20220227103237025](/Users/li/Library/Application Support/typora-user-images/image-20220227103237025.png)</p><p>![image-20220227105156885](/Users/li/Library/Application Support/typora-user-images/image-20220227105156885.png)</p><p>![image-20220227105449812](/Users/li/Library/Application Support/typora-user-images/image-20220227105449812.png)</p><p>不参与任务链合并</p><p>![image-20220227105523050](/Users/li/Library/Application Support/typora-user-images/image-20220227105523050.png)</p><p>![image-20220301093442835](/Users/li/Library/Application Support/typora-user-images/image-20220301093442835.png)</p><p>![image-20220301095746600](/Users/li/Library/Application Support/typora-user-images/image-20220301095746600.png)</p><p>![image-20220301095920280](/Users/li/Library/Application Support/typora-user-images/image-20220301095920280.png)</p><p>![image-20220301100119457](/Users/li/Library/Application Support/typora-user-images/image-20220301100119457.png)</p><p>![image-20220301100221207](/Users/li/Library/Application Support/typora-user-images/image-20220301100221207.png)</p><p>![image-20220301110520386](/Users/li/Library/Application Support/typora-user-images/image-20220301110520386.png)</p><p>![image-20220301111313531](/Users/li/Library/Application Support/typora-user-images/image-20220301111313531.png)</p><p>![image-20220301111655709](/Users/li/Library/Application Support/typora-user-images/image-20220301111655709.png)</p><p>![image-20220301111716181](/Users/li/Library/Application Support/typora-user-images/image-20220301111716181.png)</p><p>![image-20220301111738208](/Users/li/Library/Application Support/typora-user-images/image-20220301111738208.png)</p><p>![image-20220301111758409](/Users/li/Library/Application Support/typora-user-images/image-20220301111758409.png)</p><p>以上1.12已经过时: 两个参数是滑动时间窗口,第一参数窗口大小,第二个参数滑动步长</p><p>![image-20220301112409053](/Users/li/Library/Application Support/typora-user-images/image-20220301112409053.png)</p><p>滚动时间窗口:一个参数</p><p>![image-20220301112533924](/Users/li/Library/Application Support/typora-user-images/image-20220301112533924.png)</p><p>![image-20220301113737865](/Users/li/Library/Application Support/typora-user-images/image-20220301113737865.png)</p><p>window后加sum和不加sum区别,,不加直接运算,,加window相当于批处理</p><p>增量聚合</p><div class="language-perl line-numbers-mode" data-ext="perl"><pre class="language-perl"><code>public class WindowDemo <span class="token punctuation">{</span>

    public static void main<span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> throws Exception <span class="token punctuation">{</span>
        String str<span class="token operator">=</span> System<span class="token operator">.</span>getProperty<span class="token punctuation">(</span><span class="token string">&quot;user.dir&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        StreamExecutionEnvironment env <span class="token operator">=</span> StreamExecutionEnvironment<span class="token operator">.</span>getExecutionEnvironment<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        String path<span class="token operator">=</span>str<span class="token operator">+</span><span class="token string">&quot;/sensor.txt&quot;</span><span class="token punctuation">;</span>
        <span class="token operator">//</span>  env<span class="token operator">.</span>setParallelism<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


       <span class="token operator">//</span> DataStreamSource<span class="token filehandle symbol">&lt;String&gt;</span> inputstream <span class="token operator">=</span> env<span class="token operator">.</span>readTextFile<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>

        DataStreamSource<span class="token filehandle symbol">&lt;String&gt;</span> inputstream <span class="token operator">=</span> env<span class="token operator">.</span>socketTextStream<span class="token punctuation">(</span><span class="token string">&quot;localhost&quot;</span><span class="token punctuation">,</span> <span class="token number">7777</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token regex">//</span>
<span class="token operator">//</span>         转换成 SensorReading 类型
        DataStream<span class="token filehandle symbol">&lt;SensorReading&gt;</span> dataStream <span class="token operator">=</span> inputstream<span class="token operator">.</span>map<span class="token punctuation">(</span>new MapFunction<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> SensorReading<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>


            <span class="token variable">@Override</span>
            public SensorReading map<span class="token punctuation">(</span>String <span class="token regex">s) throws Exception {

                String[] strings = s.split(&quot;,&quot;);


                return new SensorReading(strings[0],new Long(strings[1])</span><span class="token punctuation">,</span>new Float<span class="token punctuation">(</span>strings<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        KeyedStream<span class="token operator">&lt;</span>SensorReading<span class="token punctuation">,</span> String<span class="token operator">&gt;</span> keydatestream <span class="token operator">=</span> dataStream<span class="token operator">.</span>keyBy<span class="token punctuation">(</span>s <span class="token operator">-&gt;</span> <span class="token regex">s.getName());
        SingleOutputStreamOperator&lt;Integer&gt; resultDatastream = keydatestream.window(TumblingProcessingTimeWindows.o</span>f<span class="token punctuation">(</span>Time<span class="token operator">.</span>seconds<span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">.</span>aggregate<span class="token punctuation">(</span>new AggregateFunction<span class="token operator">&lt;</span>SensorReading<span class="token punctuation">,</span> Integer<span class="token punctuation">,</span> Integer<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">@Override</span>
            public Integer createAccumulator<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token variable">@Override</span>
            public Integer add<span class="token punctuation">(</span>SensorReading sensorReading<span class="token punctuation">,</span> Integer count<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                System<span class="token operator">.</span>out<span class="token operator">.</span>println<span class="token punctuation">(</span><span class="token string">&quot;count:&quot;</span><span class="token operator">+</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token variable">@Override</span>
            public Integer getResult<span class="token punctuation">(</span>Integer resutl<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> resutl<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token variable">@Override</span>
            public Integer merge<span class="token punctuation">(</span>Integer a1<span class="token punctuation">,</span> Integer a2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> a1 <span class="token operator">+</span> a2<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        resultDatastream<span class="token operator">.</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        env<span class="token operator">.</span>execute<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>全窗口函数</p><div class="language-perl line-numbers-mode" data-ext="perl"><pre class="language-perl"><code>public class WindowAllDemo <span class="token punctuation">{</span>

    public static void main<span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> throws Exception <span class="token punctuation">{</span>
        String str<span class="token operator">=</span> System<span class="token operator">.</span>getProperty<span class="token punctuation">(</span><span class="token string">&quot;user.dir&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        StreamExecutionEnvironment env <span class="token operator">=</span> StreamExecutionEnvironment<span class="token operator">.</span>getExecutionEnvironment<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        String path<span class="token operator">=</span>str<span class="token operator">+</span><span class="token string">&quot;/sensor.txt&quot;</span><span class="token punctuation">;</span>
        env<span class="token operator">.</span>setParallelism<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        <span class="token operator">//</span> DataStreamSource<span class="token filehandle symbol">&lt;String&gt;</span> inputstream <span class="token operator">=</span> env<span class="token operator">.</span>readTextFile<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>

        DataStreamSource<span class="token filehandle symbol">&lt;String&gt;</span> inputstream <span class="token operator">=</span> env<span class="token operator">.</span>socketTextStream<span class="token punctuation">(</span><span class="token string">&quot;localhost&quot;</span><span class="token punctuation">,</span> <span class="token number">7777</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token regex">//</span>
<span class="token operator">//</span>         转换成 SensorReading 类型
        DataStream<span class="token filehandle symbol">&lt;SensorReading&gt;</span> dataStream <span class="token operator">=</span> inputstream<span class="token operator">.</span>map<span class="token punctuation">(</span>new MapFunction<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> SensorReading<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>


            <span class="token variable">@Override</span>
            public SensorReading map<span class="token punctuation">(</span>String <span class="token regex">s) throws Exception {

                String[] strings = s.split(&quot;,&quot;);


                return new SensorReading(strings[0],new Long(strings[1])</span><span class="token punctuation">,</span>new Float<span class="token punctuation">(</span>strings<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        KeyedStream<span class="token operator">&lt;</span>SensorReading<span class="token punctuation">,</span> String<span class="token operator">&gt;</span> keydatestream <span class="token operator">=</span> dataStream<span class="token operator">.</span>keyBy<span class="token punctuation">(</span>s <span class="token operator">-&gt;</span> <span class="token regex">s.getName());

        SingleOutputStreamOperator&lt;Tuple3&lt;String, Long, Integer&gt;&gt; resultDataStream = keydatestream.window(TumblingProcessingTimeWindows.o</span>f<span class="token punctuation">(</span>Time<span class="token operator">.</span>seconds<span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">.</span>apply<span class="token punctuation">(</span>new WindowFunction<span class="token operator">&lt;</span>SensorReading<span class="token punctuation">,</span> Tuple3<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Long<span class="token punctuation">,</span> Integer<span class="token operator">&gt;</span><span class="token punctuation">,</span> String<span class="token punctuation">,</span> TimeWindow<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">@Override</span>
            public void apply<span class="token punctuation">(</span>String <span class="token regex">s, TimeWindow timeWindow, Iterable&lt;SensorReading&gt; data,</span> Collector<span class="token operator">&lt;</span>Tuple3<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Long<span class="token punctuation">,</span> Integer<span class="token operator">&gt;&gt;</span> out<span class="token punctuation">)</span> throws Exception <span class="token punctuation">{</span>

                int size <span class="token operator">=</span> IteratorUtils<span class="token operator">.</span>toList<span class="token punctuation">(</span>data<span class="token operator">.</span>iterator<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                long end <span class="token operator">=</span> timeWindow<span class="token operator">.</span>getEnd<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                out<span class="token operator">.</span>collect<span class="token punctuation">(</span>new Tuple3<span class="token filehandle symbol">&lt;&gt;</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> end<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        resultDataStream<span class="token operator">.</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        env<span class="token operator">.</span>execute<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>![image-20220301133810642](/Users/li/Library/Application Support/typora-user-images/image-20220301133810642.png)</p><p>计数窗口</p><p>输出频率是两个一输出</p><p>要向前补齐0,所以会看到,两个数就输出一次</p><p>![image-20220301140756933](/Users/li/Library/Application Support/typora-user-images/image-20220301140756933.png)</p><div class="language-perl line-numbers-mode" data-ext="perl"><pre class="language-perl"><code><span class="token keyword">package</span> com<span class="token operator">.</span>big2333<span class="token operator">.</span>flink<span class="token punctuation">;</span>

import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>api<span class="token operator">.</span>common<span class="token operator">.</span>functions<span class="token operator">.</span>AggregateFunction<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>api<span class="token operator">.</span>common<span class="token operator">.</span>functions<span class="token operator">.</span>MapFunction<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>api<span class="token operator">.</span>java<span class="token operator">.</span>tuple<span class="token operator">.</span>Tuple2<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>streaming<span class="token operator">.</span>api<span class="token operator">.</span>datastream<span class="token operator">.</span>DataStream<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>streaming<span class="token operator">.</span>api<span class="token operator">.</span>datastream<span class="token operator">.</span>DataStreamSource<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>streaming<span class="token operator">.</span>api<span class="token operator">.</span>datastream<span class="token operator">.</span>KeyedStream<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>streaming<span class="token operator">.</span>api<span class="token operator">.</span>datastream<span class="token operator">.</span>SingleOutputStreamOperator<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>streaming<span class="token operator">.</span>api<span class="token operator">.</span>environment<span class="token operator">.</span>StreamExecutionEnvironment<span class="token punctuation">;</span>

public class WindowCountDemo <span class="token punctuation">{</span>

    public static void main<span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> throws Exception <span class="token punctuation">{</span>
        String str<span class="token operator">=</span> System<span class="token operator">.</span>getProperty<span class="token punctuation">(</span><span class="token string">&quot;user.dir&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        StreamExecutionEnvironment env <span class="token operator">=</span> StreamExecutionEnvironment<span class="token operator">.</span>getExecutionEnvironment<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        String path<span class="token operator">=</span>str<span class="token operator">+</span><span class="token string">&quot;/sensor.txt&quot;</span><span class="token punctuation">;</span>
        <span class="token operator">//</span>  env<span class="token operator">.</span>setParallelism<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        <span class="token operator">//</span> DataStreamSource<span class="token filehandle symbol">&lt;String&gt;</span> inputstream <span class="token operator">=</span> env<span class="token operator">.</span>readTextFile<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>

        DataStreamSource<span class="token filehandle symbol">&lt;String&gt;</span> inputstream <span class="token operator">=</span> env<span class="token operator">.</span>socketTextStream<span class="token punctuation">(</span><span class="token string">&quot;localhost&quot;</span><span class="token punctuation">,</span> <span class="token number">7777</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token regex">//</span>
<span class="token operator">//</span>         转换成 SensorReading 类型
        DataStream<span class="token filehandle symbol">&lt;SensorReading&gt;</span> dataStream <span class="token operator">=</span> inputstream<span class="token operator">.</span>map<span class="token punctuation">(</span>new MapFunction<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> SensorReading<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>


            <span class="token variable">@Override</span>
            public SensorReading map<span class="token punctuation">(</span>String <span class="token regex">s) throws Exception {

                String[] strings = s.split(&quot;,&quot;);


                return new SensorReading(strings[0],new Long(strings[1])</span><span class="token punctuation">,</span>new Float<span class="token punctuation">(</span>strings<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        KeyedStream<span class="token operator">&lt;</span>SensorReading<span class="token punctuation">,</span> String<span class="token operator">&gt;</span> keydatestream <span class="token operator">=</span> dataStream<span class="token operator">.</span>keyBy<span class="token punctuation">(</span>s <span class="token operator">-&gt;</span> <span class="token regex">s.getName());

        SingleOutputStreamOperator&lt;Double&gt; result = keydatestream.countWindow(10, 2).aggrega</span>te<span class="token punctuation">(</span>new AggregateFunction<span class="token operator">&lt;</span>SensorReading<span class="token punctuation">,</span> Tuple2<span class="token operator">&lt;</span>Double<span class="token punctuation">,</span> Integer<span class="token operator">&gt;</span><span class="token punctuation">,</span> Double<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">@Override</span>
            public Tuple2<span class="token operator">&lt;</span>Double<span class="token punctuation">,</span> Integer<span class="token operator">&gt;</span> createAccumulator<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> new Tuple2<span class="token filehandle symbol">&lt;&gt;</span><span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token variable">@Override</span>
            public Tuple2<span class="token operator">&lt;</span>Double<span class="token punctuation">,</span> Integer<span class="token operator">&gt;</span> add<span class="token punctuation">(</span>SensorReading sensorReading<span class="token punctuation">,</span> Tuple2<span class="token operator">&lt;</span>Double<span class="token punctuation">,</span> Integer<span class="token operator">&gt;</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> new Tuple2<span class="token filehandle symbol">&lt;&gt;</span><span class="token punctuation">(</span>value<span class="token operator">.</span>f0 <span class="token operator">+</span> sensorReading<span class="token operator">.</span>getTemp<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> value<span class="token operator">.</span>f1 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token variable">@Override</span>
            public Double getResult<span class="token punctuation">(</span>Tuple2<span class="token operator">&lt;</span>Double<span class="token punctuation">,</span> Integer<span class="token operator">&gt;</span> result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> result<span class="token operator">.</span>f0 <span class="token operator">/</span> result<span class="token operator">.</span>f1<span class="token punctuation">;</span>

            <span class="token punctuation">}</span>

            <span class="token variable">@Override</span>
            public Tuple2<span class="token operator">&lt;</span>Double<span class="token punctuation">,</span> Integer<span class="token operator">&gt;</span> merge<span class="token punctuation">(</span>Tuple2<span class="token operator">&lt;</span>Double<span class="token punctuation">,</span> Integer<span class="token operator">&gt;</span> a<span class="token punctuation">,</span> Tuple2<span class="token operator">&lt;</span>Double<span class="token punctuation">,</span> Integer<span class="token operator">&gt;</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> new Tuple2<span class="token filehandle symbol">&lt;&gt;</span><span class="token punctuation">(</span>a<span class="token operator">.</span>f0 <span class="token operator">+</span> b<span class="token operator">.</span>f0<span class="token punctuation">,</span> a<span class="token operator">.</span>f1 <span class="token operator">+</span> b<span class="token operator">.</span>f1<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        result<span class="token operator">.</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        env<span class="token operator">.</span>execute<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>![image-20220301162046107](/Users/li/Library/Application Support/typora-user-images/image-20220301162046107.png)</p><p>![image-20220301163833206](/Users/li/Library/Application Support/typora-user-images/image-20220301163833206.png)</p><p>![image-20220301164315139](/Users/li/Library/Application Support/typora-user-images/image-20220301164315139.png)</p><p>![image-20220301174654209](/Users/li/Library/Application Support/typora-user-images/image-20220301174654209.png)</p><p>alowlateness 到时间了不关闭窗口,先进行计算,后面的数据在累加</p><p>![image-20220301184224628](/Users/li/Library/Application Support/typora-user-images/image-20220301184224628.png)</p><p>![image-20220301185424348](/Users/li/Library/Application Support/typora-user-images/image-20220301185424348.png)</p><div class="language-perl line-numbers-mode" data-ext="perl"><pre class="language-perl"><code><span class="token keyword">package</span> com<span class="token operator">.</span>big2333<span class="token operator">.</span>flink<span class="token punctuation">;</span>

import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>api<span class="token operator">.</span>common<span class="token operator">.</span>eventtime<span class="token operator">.</span>BoundedOutOfOrdernessWatermarks<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>api<span class="token operator">.</span>common<span class="token operator">.</span>eventtime<span class="token operator">.</span>WatermarkStrategy<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>api<span class="token operator">.</span>common<span class="token operator">.</span>functions<span class="token operator">.</span>MapFunction<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>streaming<span class="token operator">.</span>api<span class="token operator">.</span>datastream<span class="token operator">.</span>DataStream<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>streaming<span class="token operator">.</span>api<span class="token operator">.</span>datastream<span class="token operator">.</span>DataStreamSource<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>streaming<span class="token operator">.</span>api<span class="token operator">.</span>datastream<span class="token operator">.</span>KeyedStream<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>streaming<span class="token operator">.</span>api<span class="token operator">.</span>environment<span class="token operator">.</span>StreamExecutionEnvironment<span class="token punctuation">;</span>

import java<span class="token operator">.</span>time<span class="token operator">.</span>Duration<span class="token punctuation">;</span>

public class WaterMarkDemo <span class="token punctuation">{</span>

    public static void main<span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        String str<span class="token operator">=</span> System<span class="token operator">.</span>getProperty<span class="token punctuation">(</span><span class="token string">&quot;user.dir&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        StreamExecutionEnvironment env <span class="token operator">=</span> StreamExecutionEnvironment<span class="token operator">.</span>getExecutionEnvironment<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        String path<span class="token operator">=</span>str<span class="token operator">+</span><span class="token string">&quot;/sensor.txt&quot;</span><span class="token punctuation">;</span>
        env<span class="token operator">.</span>setParallelism<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        <span class="token operator">//</span> DataStreamSource<span class="token filehandle symbol">&lt;String&gt;</span> inputstream <span class="token operator">=</span> env<span class="token operator">.</span>readTextFile<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>

        DataStreamSource<span class="token filehandle symbol">&lt;String&gt;</span> inputstream <span class="token operator">=</span> env<span class="token operator">.</span>socketTextStream<span class="token punctuation">(</span><span class="token string">&quot;localhost&quot;</span><span class="token punctuation">,</span> <span class="token number">7777</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token regex">//</span>
<span class="token operator">//</span>         转换成 SensorReading 类型
        DataStream<span class="token filehandle symbol">&lt;SensorReading&gt;</span> dataStream <span class="token operator">=</span> inputstream<span class="token operator">.</span>map<span class="token punctuation">(</span>new MapFunction<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> SensorReading<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>


            <span class="token variable">@Override</span>
            public SensorReading map<span class="token punctuation">(</span>String <span class="token regex">s) throws Exception {

                String[] strings = s.split(&quot;,&quot;);


                return new SensorReading(strings[0],new Long(strings[1])</span><span class="token punctuation">,</span>new Float<span class="token punctuation">(</span>strings<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token operator">.</span>assignTimestampsAndWatermarks<span class="token punctuation">(</span>WatermarkStrategy<span class="token operator">.</span><span class="token filehandle symbol">&lt;SensorReading&gt;</span>forBoundedOutOfOrderness<span class="token punctuation">(</span>Duration<span class="token operator">.</span>ofSeconds<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token operator">.</span>withTimestampAssigner<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>sensor<span class="token punctuation">,</span>l<span class="token punctuation">)</span><span class="token operator">-&gt;</span>sensor<span class="token operator">.</span>getValue<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token variable">*1000</span>L<span class="token punctuation">)</span><span class="token punctuation">)</span>
                
                <span class="token punctuation">)</span><span class="token punctuation">;</span>



    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>![image-20220301200843014](/Users/li/Library/Application Support/typora-user-images/image-20220301200843014.png)</p><p>![image-20220301204655995](/Users/li/Library/Application Support/typora-user-images/image-20220301204655995.png)</p><p>![image-20220301210723786](/Users/li/Library/Application Support/typora-user-images/image-20220301210723786.png)</p><p>![image-20220301211538126](/Users/li/Library/Application Support/typora-user-images/image-20220301211538126.png)</p><p>![image-20220301211725597](/Users/li/Library/Application Support/typora-user-images/image-20220301211725597.png)</p><p>![image-20220301211751690](/Users/li/Library/Application Support/typora-user-images/image-20220301211751690.png)</p><p>根据上面的代码:</p><p>第一个数据来的时候,</p><p>例如:sensor01,1547718199,32.5</p><p>公式</p><p>时间串:1547718199</p><p>timestap-timestap%windowsize</p><p>199-199%15=199-4=195</p><p>所以:第一窗口范围</p><p>[195--210)</p><p>之前的窗口是 [180-195]</p><p>offset 格林威治时间 8:00--20:00</p><p>要想)0:00-12:00</p><p>![image-20220301213546299](/Users/li/Library/Application Support/typora-user-images/image-20220301213546299.png)</p><p>![image-20220301213804759](/Users/li/Library/Application Support/typora-user-images/image-20220301213804759.png)</p><p>15秒输出一次,窗口不关闭等到60s才关闭,15s数据直接追加</p><p>![image-20220301213943945](/Users/li/Library/Application Support/typora-user-images/image-20220301213943945.png)</p><p>195-210第一个窗口,</p><p>212来的时候,195-210输出一下,不关闭窗口,因为有allowLateness,在来一个195-210之间的数据会实时追加一下,什么时候</p><p>会关闭窗口210+60+2=272的时候会关闭195-210 窗口,关闭之后就不能接受195-210之间的数据,就放到了侧输出流中.</p><p>开窗分组原理图</p><p>![image-20220301220619900](/Users/li/Library/Application Support/typora-user-images/image-20220301220619900.png)</p><p>![image-20220302094433558](/Users/li/Library/Application Support/typora-user-images/image-20220302094433558.png)</p><p>![image-20220302095611231](/Users/li/Library/Application Support/typora-user-images/image-20220302095611231.png)</p><p>![image-20220302100014127](/Users/li/Library/Application Support/typora-user-images/image-20220302100014127.png)</p><p>![image-20220302100442531](/Users/li/Library/Application Support/typora-user-images/image-20220302100442531.png)</p><p>![image-20220302113207926](/Users/li/Library/Application Support/typora-user-images/image-20220302113207926.png)</p><p>![image-20220302113910629](/Users/li/Library/Application Support/typora-user-images/image-20220302113910629.png)</p><p>![image-20220302120450103](/Users/li/Library/Application Support/typora-user-images/image-20220302120450103.png)</p><p>![image-20220302120503435](/Users/li/Library/Application Support/typora-user-images/image-20220302120503435.png)</p><div class="language-perl line-numbers-mode" data-ext="perl"><pre class="language-perl"><code><span class="token keyword">package</span> com<span class="token operator">.</span>big2333<span class="token operator">.</span>flink<span class="token punctuation">;</span>

import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>api<span class="token operator">.</span>common<span class="token operator">.</span>functions<span class="token operator">.</span>MapFunction<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>api<span class="token operator">.</span>common<span class="token operator">.</span>functions<span class="token operator">.</span>RichMapFunction<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>api<span class="token operator">.</span>common<span class="token operator">.</span><span class="token keyword">state</span><span class="token operator">.</span>ValueState<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>api<span class="token operator">.</span>common<span class="token operator">.</span><span class="token keyword">state</span><span class="token operator">.</span>ValueStateDescriptor<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>configuration<span class="token operator">.</span>Configuration<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>streaming<span class="token operator">.</span>api<span class="token operator">.</span>datastream<span class="token operator">.</span>DataStream<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>streaming<span class="token operator">.</span>api<span class="token operator">.</span>datastream<span class="token operator">.</span>DataStreamSource<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>streaming<span class="token operator">.</span>api<span class="token operator">.</span>datastream<span class="token operator">.</span>KeyedStream<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>streaming<span class="token operator">.</span>api<span class="token operator">.</span>datastream<span class="token operator">.</span>SingleOutputStreamOperator<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>streaming<span class="token operator">.</span>api<span class="token operator">.</span>environment<span class="token operator">.</span>StreamExecutionEnvironment<span class="token punctuation">;</span>

public class StateKeyedState <span class="token punctuation">{</span>

    public static void main<span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> throws Exception <span class="token punctuation">{</span>


        String str<span class="token operator">=</span> System<span class="token operator">.</span>getProperty<span class="token punctuation">(</span><span class="token string">&quot;user.dir&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        StreamExecutionEnvironment env <span class="token operator">=</span> StreamExecutionEnvironment<span class="token operator">.</span>getExecutionEnvironment<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        String path<span class="token operator">=</span>str<span class="token operator">+</span><span class="token string">&quot;/sensor.txt&quot;</span><span class="token punctuation">;</span>
        env<span class="token operator">.</span>setParallelism<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        <span class="token operator">//</span> DataStreamSource<span class="token filehandle symbol">&lt;String&gt;</span> inputstream <span class="token operator">=</span> env<span class="token operator">.</span>readTextFile<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>

        DataStreamSource<span class="token filehandle symbol">&lt;String&gt;</span> inputstream <span class="token operator">=</span> env<span class="token operator">.</span>socketTextStream<span class="token punctuation">(</span><span class="token string">&quot;localhost&quot;</span><span class="token punctuation">,</span> <span class="token number">7777</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        DataStream<span class="token filehandle symbol">&lt;SensorReading&gt;</span> dataStream <span class="token operator">=</span> inputstream<span class="token operator">.</span>map<span class="token punctuation">(</span>new MapFunction<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> SensorReading<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>


            <span class="token variable">@Override</span>
            public SensorReading map<span class="token punctuation">(</span>String <span class="token regex">s) throws Exception {

                String[] strings = s.split(&quot;,&quot;);


                return new SensorReading(strings[0],new Long(strings[1])</span><span class="token punctuation">,</span>new Float<span class="token punctuation">(</span>strings<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        KeyedStream<span class="token operator">&lt;</span>SensorReading<span class="token punctuation">,</span> String<span class="token operator">&gt;</span> keyedStream <span class="token operator">=</span> dataStream<span class="token operator">.</span>keyBy<span class="token punctuation">(</span>f <span class="token operator">-&gt;</span> f<span class="token operator">.</span>getName<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token regex">//</span>
<span class="token operator">//</span>         转换成 SensorReading 类型

        SingleOutputStreamOperator<span class="token filehandle symbol">&lt;Integer&gt;</span> countDateStream <span class="token operator">=</span> keyedStream<span class="token operator">.</span>map<span class="token punctuation">(</span>new RichMapFunction<span class="token operator">&lt;</span>SensorReading<span class="token punctuation">,</span> Integer<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

           private ValueState<span class="token filehandle symbol">&lt;Integer&gt;</span> valueState<span class="token punctuation">;</span>
            <span class="token variable">@Override</span>
            public void open<span class="token punctuation">(</span>Configuration parameters<span class="token punctuation">)</span> throws Exception <span class="token punctuation">{</span>
                System<span class="token operator">.</span>out<span class="token operator">.</span>println<span class="token punctuation">(</span><span class="token string">&quot;open&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                valueState<span class="token operator">=</span>getRuntimeContext<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span>getState<span class="token punctuation">(</span>new ValueStateDescriptor<span class="token filehandle symbol">&lt;Integer&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;my-value&quot;</span><span class="token punctuation">,</span> Integer<span class="token operator">.</span>class<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token variable">@Override</span>
            public Integer map<span class="token punctuation">(</span>SensorReading sensorReading<span class="token punctuation">)</span> throws Exception <span class="token punctuation">{</span>


                Integer count <span class="token operator">=</span> valueState<span class="token operator">.</span>value<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                System<span class="token operator">.</span>out<span class="token operator">.</span>println<span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>
                count<span class="token operator">++</span><span class="token punctuation">;</span>

                valueState<span class="token operator">.</span>update<span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>


                <span class="token keyword">return</span> count<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>


        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        countDateStream<span class="token operator">.</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;count&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        env<span class="token operator">.</span>execute<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>状态报警(两个相邻的值差10就报警)</p><div class="language-perl line-numbers-mode" data-ext="perl"><pre class="language-perl"><code><span class="token keyword">package</span> com<span class="token operator">.</span>big2333<span class="token operator">.</span>flink<span class="token punctuation">;</span>

import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>api<span class="token operator">.</span>common<span class="token operator">.</span>functions<span class="token operator">.</span>MapFunction<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>api<span class="token operator">.</span>common<span class="token operator">.</span>functions<span class="token operator">.</span>RichFlatJoinFunction<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>api<span class="token operator">.</span>common<span class="token operator">.</span>functions<span class="token operator">.</span>RichFlatMapFunction<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>api<span class="token operator">.</span>common<span class="token operator">.</span><span class="token keyword">state</span><span class="token operator">.</span>ValueState<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>api<span class="token operator">.</span>common<span class="token operator">.</span><span class="token keyword">state</span><span class="token operator">.</span>ValueStateDescriptor<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>configuration<span class="token operator">.</span>Configuration<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>streaming<span class="token operator">.</span>api<span class="token operator">.</span>datastream<span class="token operator">.</span>DataStream<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>streaming<span class="token operator">.</span>api<span class="token operator">.</span>datastream<span class="token operator">.</span>DataStreamSource<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>streaming<span class="token operator">.</span>api<span class="token operator">.</span>datastream<span class="token operator">.</span>KeyedStream<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>streaming<span class="token operator">.</span>api<span class="token operator">.</span>datastream<span class="token operator">.</span>SingleOutputStreamOperator<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>streaming<span class="token operator">.</span>api<span class="token operator">.</span>environment<span class="token operator">.</span>StreamExecutionEnvironment<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>util<span class="token operator">.</span>Collector<span class="token punctuation">;</span>
import scala<span class="token operator">.</span>Tuple3<span class="token punctuation">;</span>

public class StateTempWarning <span class="token punctuation">{</span>

    public static void main<span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> throws Exception <span class="token punctuation">{</span>

        String str<span class="token operator">=</span> System<span class="token operator">.</span>getProperty<span class="token punctuation">(</span><span class="token string">&quot;user.dir&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        StreamExecutionEnvironment env <span class="token operator">=</span> StreamExecutionEnvironment<span class="token operator">.</span>getExecutionEnvironment<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        String path<span class="token operator">=</span>str<span class="token operator">+</span><span class="token string">&quot;/sensor.txt&quot;</span><span class="token punctuation">;</span>
        env<span class="token operator">.</span>setParallelism<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        <span class="token operator">//</span> DataStreamSource<span class="token filehandle symbol">&lt;String&gt;</span> inputstream <span class="token operator">=</span> env<span class="token operator">.</span>readTextFile<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>

        DataStreamSource<span class="token filehandle symbol">&lt;String&gt;</span> inputstream <span class="token operator">=</span> env<span class="token operator">.</span>socketTextStream<span class="token punctuation">(</span><span class="token string">&quot;localhost&quot;</span><span class="token punctuation">,</span> <span class="token number">7777</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        DataStream<span class="token filehandle symbol">&lt;SensorReading&gt;</span> dataStream <span class="token operator">=</span> inputstream<span class="token operator">.</span>map<span class="token punctuation">(</span>new MapFunction<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> SensorReading<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>


            <span class="token variable">@Override</span>
            public SensorReading map<span class="token punctuation">(</span>String <span class="token regex">s) throws Exception {

                String[] strings = s.split(&quot;,&quot;);


                return new SensorReading(strings[0],new Long(strings[1])</span><span class="token punctuation">,</span>new Float<span class="token punctuation">(</span>strings<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        KeyedStream<span class="token operator">&lt;</span>SensorReading<span class="token punctuation">,</span> String<span class="token operator">&gt;</span> keyedStream <span class="token operator">=</span> dataStream<span class="token operator">.</span>keyBy<span class="token punctuation">(</span>f <span class="token operator">-&gt;</span> f<span class="token operator">.</span>getName<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        SingleOutputStreamOperator<span class="token operator">&lt;</span>Tuple3<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Float<span class="token punctuation">,</span> Float<span class="token operator">&gt;&gt;</span> result <span class="token operator">=</span> keyedStream<span class="token operator">.</span>flatMap<span class="token punctuation">(</span>new MyFlatTempWarning<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        result<span class="token operator">.</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        env<span class="token operator">.</span>execute<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    public static  class MyFlatTempWarning extends RichFlatMapFunction<span class="token filehandle symbol">&lt;SensorReading,Tuple3&lt;String,Float,Float&gt;</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>

       public ValueState<span class="token filehandle symbol">&lt;Float&gt;</span> valueState<span class="token punctuation">;</span>

        <span class="token variable">@Override</span>
        public void open<span class="token punctuation">(</span>Configuration parameters<span class="token punctuation">)</span> throws Exception <span class="token punctuation">{</span>

            valueState<span class="token operator">=</span>getRuntimeContext<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span>getState<span class="token punctuation">(</span>new ValueStateDescriptor<span class="token filehandle symbol">&lt;Float&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;temp-value&quot;</span><span class="token punctuation">,</span> Float<span class="token operator">.</span>class<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token variable">@Override</span>
        public void flatMap<span class="token punctuation">(</span>SensorReading sensorReading<span class="token punctuation">,</span> Collector<span class="token operator">&lt;</span>Tuple3<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Float<span class="token punctuation">,</span> Float<span class="token operator">&gt;&gt;</span> collector<span class="token punctuation">)</span> throws Exception <span class="token punctuation">{</span>


            Float temp <span class="token operator">=</span> valueState<span class="token operator">.</span>value<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span><span class="token punctuation">(</span>temp<span class="token operator">!=</span>null<span class="token punctuation">)</span><span class="token punctuation">{</span>

                System<span class="token operator">.</span>out<span class="token operator">.</span>println<span class="token punctuation">(</span>Math<span class="token operator">.</span>abs<span class="token punctuation">(</span>sensorReading<span class="token operator">.</span>getTemp<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span>temp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token keyword">if</span><span class="token punctuation">(</span>Math<span class="token operator">.</span>abs<span class="token punctuation">(</span>sensorReading<span class="token operator">.</span>getTemp<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span>temp<span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

                    collector<span class="token operator">.</span>collect<span class="token punctuation">(</span>new Tuple3<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Float<span class="token punctuation">,</span> Float<span class="token operator">&gt;</span><span class="token punctuation">(</span>sensorReading<span class="token operator">.</span>getName<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> temp<span class="token punctuation">,</span>sensorReading<span class="token operator">.</span>getTemp<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>

            System<span class="token operator">.</span>out<span class="token operator">.</span>println<span class="token punctuation">(</span><span class="token string">&quot;update record&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            valueState<span class="token operator">.</span>update<span class="token punctuation">(</span>sensorReading<span class="token operator">.</span>getTemp<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        <span class="token punctuation">}</span>

        <span class="token variable">@Override</span>
        public void close<span class="token punctuation">(</span><span class="token punctuation">)</span> throws Exception <span class="token punctuation">{</span>

            System<span class="token operator">.</span>out<span class="token operator">.</span>println<span class="token punctuation">(</span><span class="token string">&quot;close&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            valueState<span class="token operator">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token regex">//</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>![image-20220302133937838](/Users/li/Library/Application Support/typora-user-images/image-20220302133937838.png)</p><p>![image-20220302155450539](/Users/li/Library/Application Support/typora-user-images/image-20220302155450539.png)</p><p>![image-20220302155715278](/Users/li/Library/Application Support/typora-user-images/image-20220302155715278.png)</p><p>![image-20220302163451034](/Users/li/Library/Application Support/typora-user-images/image-20220302163451034.png)</p><p>![image-20220302165711529](/Users/li/Library/Application Support/typora-user-images/image-20220302165711529.png)</p><p>![image-20220302170502467](/Users/li/Library/Application Support/typora-user-images/image-20220302170502467.png)</p><p>![image-20220302171053856](/Users/li/Library/Application Support/typora-user-images/image-20220302171053856.png)</p><p>![image-20220302175710836](/Users/li/Library/Application Support/typora-user-images/image-20220302175710836.png)</p><p>![image-20220302183612862](/Users/li/Library/Application Support/typora-user-images/image-20220302183612862.png)</p><p>![image-20220302183819402](/Users/li/Library/Application Support/typora-user-images/image-20220302183819402.png)</p><p>![image-20220302184948037](/Users/li/Library/Application Support/typora-user-images/image-20220302184948037.png)</p><div class="language-perl line-numbers-mode" data-ext="perl"><pre class="language-perl"><code>
<span class="token keyword">package</span> com<span class="token operator">.</span>big2333<span class="token operator">.</span>flink<span class="token punctuation">;</span>

import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>api<span class="token operator">.</span>common<span class="token operator">.</span>eventtime<span class="token operator">.</span>WatermarkStrategy<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>api<span class="token operator">.</span>common<span class="token operator">.</span>functions<span class="token operator">.</span>MapFunction<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>api<span class="token operator">.</span>common<span class="token operator">.</span><span class="token keyword">state</span><span class="token operator">.</span>ValueState<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>api<span class="token operator">.</span>common<span class="token operator">.</span><span class="token keyword">state</span><span class="token operator">.</span>ValueStateDescriptor<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>configuration<span class="token operator">.</span>Configuration<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>streaming<span class="token operator">.</span>api<span class="token operator">.</span>datastream<span class="token operator">.</span>DataStream<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>streaming<span class="token operator">.</span>api<span class="token operator">.</span>datastream<span class="token operator">.</span>DataStreamSource<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>streaming<span class="token operator">.</span>api<span class="token operator">.</span>datastream<span class="token operator">.</span>KeyedStream<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>streaming<span class="token operator">.</span>api<span class="token operator">.</span>datastream<span class="token operator">.</span>SingleOutputStreamOperator<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>streaming<span class="token operator">.</span>api<span class="token operator">.</span>environment<span class="token operator">.</span>StreamExecutionEnvironment<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>streaming<span class="token operator">.</span>api<span class="token operator">.</span>functions<span class="token operator">.</span>KeyedProcessFunction<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>util<span class="token operator">.</span>Collector<span class="token punctuation">;</span>

import java<span class="token operator">.</span>time<span class="token operator">.</span>Duration<span class="token punctuation">;</span>

public class StateSerialTenScondsWarning <span class="token punctuation">{</span>

    public static void main<span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> throws Exception <span class="token punctuation">{</span>

        String str<span class="token operator">=</span> System<span class="token operator">.</span>getProperty<span class="token punctuation">(</span><span class="token string">&quot;user.dir&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        StreamExecutionEnvironment env <span class="token operator">=</span> StreamExecutionEnvironment<span class="token operator">.</span>getExecutionEnvironment<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        String path<span class="token operator">=</span>str<span class="token operator">+</span><span class="token string">&quot;/sensor.txt&quot;</span><span class="token punctuation">;</span>


        env<span class="token operator">.</span>getConfig<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span>setAutoWatermarkInterval<span class="token punctuation">(</span>200L<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token operator">//</span>env<span class="token operator">.</span>setStreamTimeCharacteristic<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        env<span class="token operator">.</span>setParallelism<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        <span class="token operator">//</span> DataStreamSource<span class="token filehandle symbol">&lt;String&gt;</span> inputstream <span class="token operator">=</span> env<span class="token operator">.</span>readTextFile<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>

        DataStreamSource<span class="token filehandle symbol">&lt;String&gt;</span> inputstream <span class="token operator">=</span> env<span class="token operator">.</span>socketTextStream<span class="token punctuation">(</span><span class="token string">&quot;localhost&quot;</span><span class="token punctuation">,</span> <span class="token number">7777</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token regex">//</span>
<span class="token operator">//</span>         转换成 SensorReading 类型
        DataStream<span class="token filehandle symbol">&lt;SensorReading&gt;</span> dataStream <span class="token operator">=</span> inputstream<span class="token operator">.</span>map<span class="token punctuation">(</span>new MapFunction<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> SensorReading<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>


            <span class="token variable">@Override</span>
            public SensorReading map<span class="token punctuation">(</span>String <span class="token regex">s) throws Exception {

                String[] strings = s.split(&quot;,&quot;);


                return new SensorReading(strings[0],new Long(strings[1])</span><span class="token punctuation">,</span>new Float<span class="token punctuation">(</span>strings<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>





        KeyedStream<span class="token operator">&lt;</span>SensorReading<span class="token punctuation">,</span> String<span class="token operator">&gt;</span> keyedStream <span class="token operator">=</span> dataStream<span class="token operator">.</span>keyBy<span class="token punctuation">(</span>f <span class="token operator">-&gt;</span> f<span class="token operator">.</span>getName<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        SingleOutputStreamOperator<span class="token filehandle symbol">&lt;String&gt;</span> processDatastream <span class="token operator">=</span> keyedStream<span class="token operator">.</span>process<span class="token punctuation">(</span>new KeyedProcessFunction<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> SensorReading<span class="token punctuation">,</span> String<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            private ValueState<span class="token filehandle symbol">&lt;Float&gt;</span> tempValueState<span class="token punctuation">;</span>

            private ValueState<span class="token filehandle symbol">&lt;Long&gt;</span> timeValueState<span class="token punctuation">;</span>

            <span class="token variable">@Override</span>
            public void open<span class="token punctuation">(</span>Configuration parameters<span class="token punctuation">)</span> throws Exception <span class="token punctuation">{</span>
                tempValueState<span class="token operator">=</span>getRuntimeContext<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span>getState<span class="token punctuation">(</span>new ValueStateDescriptor<span class="token filehandle symbol">&lt;Float&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;last-value&quot;</span><span class="token punctuation">,</span> Float<span class="token operator">.</span>class<span class="token punctuation">,</span>Float<span class="token operator">.</span>MIN_VALUE<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                timeValueState<span class="token operator">=</span>getRuntimeContext<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span>getState<span class="token punctuation">(</span>new ValueStateDescriptor<span class="token filehandle symbol">&lt;Long&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;time-value&quot;</span><span class="token punctuation">,</span> Long<span class="token operator">.</span>class<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token punctuation">}</span>

            <span class="token variable">@Override</span>
            public void close<span class="token punctuation">(</span><span class="token punctuation">)</span> throws Exception <span class="token punctuation">{</span>

                tempValueState<span class="token operator">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token variable">@Override</span>
            public void processElement<span class="token punctuation">(</span>SensorReading sensorReading<span class="token punctuation">,</span> Context ctx<span class="token punctuation">,</span> Collector<span class="token filehandle symbol">&lt;String&gt;</span> out<span class="token punctuation">)</span> throws Exception <span class="token punctuation">{</span>


                <span class="token keyword">if</span><span class="token punctuation">(</span>sensorReading<span class="token operator">.</span>getTemp<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span>tempValueState<span class="token operator">.</span>value<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token variable">&amp;timeValueState</span><span class="token operator">.</span>value<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span>null<span class="token punctuation">)</span><span class="token punctuation">{</span>

                    long currentTime <span class="token operator">=</span> ctx<span class="token operator">.</span>timerService<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span>currentProcessingTime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    ctx<span class="token operator">.</span>timerService<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span>registerProcessingTimeTimer<span class="token punctuation">(</span>currentTime<span class="token operator">+</span><span class="token number">10</span><span class="token variable">*1000</span>L<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    timeValueState<span class="token operator">.</span>update<span class="token punctuation">(</span>currentTime<span class="token operator">+</span><span class="token number">10</span><span class="token variable">*1000</span>L<span class="token punctuation">)</span><span class="token punctuation">;</span>


                <span class="token punctuation">}</span>

                <span class="token keyword">if</span><span class="token punctuation">(</span>sensorReading<span class="token operator">.</span>getTemp<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;</span>tempValueState<span class="token operator">.</span>value<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token variable">&amp;timeValueState</span><span class="token operator">.</span>value<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!=</span>null<span class="token punctuation">)</span><span class="token punctuation">{</span>

                    ctx<span class="token operator">.</span>timerService<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span>deleteProcessingTimeTimer<span class="token punctuation">(</span>timeValueState<span class="token operator">.</span>value<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    timeValueState<span class="token operator">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>


                tempValueState<span class="token operator">.</span>update<span class="token punctuation">(</span>sensorReading<span class="token operator">.</span>getTemp<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token punctuation">}</span>


            <span class="token variable">@Override</span>
            public void onTimer<span class="token punctuation">(</span>long timestamp<span class="token punctuation">,</span> OnTimerContext ctx<span class="token punctuation">,</span> Collector<span class="token filehandle symbol">&lt;String&gt;</span> out<span class="token punctuation">)</span> throws Exception <span class="token punctuation">{</span>


                out<span class="token operator">.</span>collect<span class="token punctuation">(</span>ctx<span class="token operator">.</span>getCurrentKey<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;连续10s上升&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        processDatastream<span class="token operator">.</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;process&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        env<span class="token operator">.</span>execute<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>![image-20220302201815527](/Users/li/Library/Application Support/typora-user-images/image-20220302201815527.png)</p><p>![image-20220302203359602](/Users/li/Library/Application Support/typora-user-images/image-20220302203359602.png)</p><p>![image-20220302204551343](/Users/li/Library/Application Support/typora-user-images/image-20220302204551343.png)</p><p>![image-20220302210624530](/Users/li/Library/Application Support/typora-user-images/image-20220302210624530.png)</p><p>![image-20220302213002078](/Users/li/Library/Application Support/typora-user-images/image-20220302213002078.png)</p><p>状态一致性</p><p>计算要计算一次</p><p>![image-20220303090109086](/Users/li/Library/Application Support/typora-user-images/image-20220303090109086.png)</p><p>![image-20220303091255528](/Users/li/Library/Application Support/typora-user-images/image-20220303091255528.png)</p><p>![image-20220303092625831](/Users/li/Library/Application Support/typora-user-images/image-20220303092625831.png)</p><p>![</p><p>](/Users/li/Library/Application Support/typora-user-images/image-20220303093127899.png)</p><p>幂等写入</p><p>![image-20220303094029073](/Users/li/Library/Application Support/typora-user-images/image-20220303094029073.png)</p><p>![image-20220303094416583](/Users/li/Library/Application Support/typora-user-images/image-20220303094416583.png)</p><p>![image-20220303094831019](/Users/li/Library/Application Support/typora-user-images/image-20220303094831019.png)</p><p>![image-20220303095800219](/Users/li/Library/Application Support/typora-user-images/image-20220303095800219.png)</p><p>![image-20220303100137438](/Users/li/Library/Application Support/typora-user-images/image-20220303100137438.png)</p><p>![image-20220303101044312](/Users/li/Library/Application Support/typora-user-images/image-20220303101044312.png)</p><p>![image-20220303101540629](/Users/li/Library/Application Support/typora-user-images/image-20220303101540629.png)</p><p>![image-20220303101613756](/Users/li/Library/Application Support/typora-user-images/image-20220303101613756.png)</p><div class="language-perl line-numbers-mode" data-ext="perl"><pre class="language-perl"><code><span class="token keyword">package</span> com<span class="token operator">.</span>big2333<span class="token operator">.</span>flink<span class="token punctuation">;</span>

import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>api<span class="token operator">.</span>common<span class="token operator">.</span>functions<span class="token operator">.</span>MapFunction<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>streaming<span class="token operator">.</span>api<span class="token operator">.</span>datastream<span class="token operator">.</span>DataStream<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>streaming<span class="token operator">.</span>api<span class="token operator">.</span>datastream<span class="token operator">.</span>DataStreamSource<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>streaming<span class="token operator">.</span>api<span class="token operator">.</span>environment<span class="token operator">.</span>StreamExecutionEnvironment<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>table<span class="token operator">.</span>api<span class="token operator">.</span>Table<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>table<span class="token operator">.</span>api<span class="token operator">.</span>bridge<span class="token operator">.</span>java<span class="token operator">.</span>StreamTableEnvironment<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>types<span class="token operator">.</span>Row<span class="token punctuation">;</span>

import static org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>table<span class="token operator">.</span>api<span class="token operator">.</span>Expressions<span class="token operator">.</span><span class="token variable">$;</span>

public class TableSqlApi <span class="token punctuation">{</span>

    public static void main<span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> throws Exception <span class="token punctuation">{</span>

        String str<span class="token operator">=</span> System<span class="token operator">.</span>getProperty<span class="token punctuation">(</span><span class="token string">&quot;user.dir&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        StreamExecutionEnvironment env <span class="token operator">=</span> StreamExecutionEnvironment<span class="token operator">.</span>getExecutionEnvironment<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        String path<span class="token operator">=</span>str<span class="token operator">+</span><span class="token string">&quot;/sensor.txt&quot;</span><span class="token punctuation">;</span>
        env<span class="token operator">.</span>setParallelism<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

         DataStreamSource<span class="token filehandle symbol">&lt;String&gt;</span> inputstream <span class="token operator">=</span> env<span class="token operator">.</span>readTextFile<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token operator">//</span>DataStreamSource<span class="token filehandle symbol">&lt;String&gt;</span> inputstream <span class="token operator">=</span> env<span class="token operator">.</span>socketTextStream<span class="token punctuation">(</span><span class="token string">&quot;localhost&quot;</span><span class="token punctuation">,</span> <span class="token number">7777</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token regex">//</span>
<span class="token operator">//</span>         转换成 SensorReading 类型
        DataStream<span class="token filehandle symbol">&lt;SensorReading&gt;</span> dataStream <span class="token operator">=</span> inputstream<span class="token operator">.</span>map<span class="token punctuation">(</span>new MapFunction<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> SensorReading<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>


            <span class="token variable">@Override</span>
            public SensorReading map<span class="token punctuation">(</span>String <span class="token regex">s) throws Exception {

                String[] strings = s.split(&quot;,&quot;);


                return new SensorReading(strings[0],new Long(strings[1])</span><span class="token punctuation">,</span>new Float<span class="token punctuation">(</span>strings<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>



        <span class="token operator">//</span>table api
        StreamTableEnvironment tableEnv <span class="token operator">=</span> StreamTableEnvironment<span class="token operator">.</span>create<span class="token punctuation">(</span>env<span class="token punctuation">)</span><span class="token punctuation">;</span>

        Table table <span class="token operator">=</span> tableEnv<span class="token operator">.</span>fromDataStream<span class="token punctuation">(</span>dataStream<span class="token punctuation">)</span><span class="token punctuation">;</span>
        Table resultTable <span class="token operator">=</span> table<span class="token operator">.</span>select<span class="token punctuation">(</span><span class="token variable">$(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">.</span>where<span class="token punctuation">(</span><span class="token variable">$(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token operator">.</span>isEqual<span class="token punctuation">(</span><span class="token string">&quot;sensor01&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token operator">//</span>talbe sql

        tableEnv<span class="token operator">.</span>createTemporaryView<span class="token punctuation">(</span><span class="token string">&quot;sensor&quot;</span><span class="token punctuation">,</span> table<span class="token punctuation">)</span><span class="token punctuation">;</span>

        String sql<span class="token operator">=</span><span class="token string">&quot;select name from sensor where name=&#39;sensor01&#39;&quot;</span><span class="token punctuation">;</span>
        Table resultTable1 <span class="token operator">=</span> tableEnv<span class="token operator">.</span>sqlQuery<span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>


        tableEnv<span class="token operator">.</span>toAppendStream<span class="token punctuation">(</span>resultTable<span class="token punctuation">,</span> Row<span class="token operator">.</span>class<span class="token punctuation">)</span><span class="token operator">.</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        tableEnv<span class="token operator">.</span>toAppendStream<span class="token punctuation">(</span>resultTable1<span class="token punctuation">,</span> Row<span class="token operator">.</span>class<span class="token punctuation">)</span><span class="token operator">.</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        env<span class="token operator">.</span>execute<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>![image-20220303120532886](/Users/li/Library/Application Support/typora-user-images/image-20220303120532886.png)</p><p>![image-20220303120801081](/Users/li/Library/Application Support/typora-user-images/image-20220303120801081.png)</p><p>![image-20220303120943931](/Users/li/Library/Application Support/typora-user-images/image-20220303120943931.png)</p><p>![image-20220303123400493](/Users/li/Library/Application Support/typora-user-images/image-20220303123400493.png)</p><p>idea 复制错误的提示信息</p><p>用alt 键 选择错误信息</p><p>![image-20220303154650374](/Users/li/Library/Application Support/typora-user-images/image-20220303154650374.png)</p><p>![image-20220303155437043](/Users/li/Library/Application Support/typora-user-images/image-20220303155437043.png)</p><p>![image-20220303155457200](/Users/li/Library/Application Support/typora-user-images/image-20220303155457200.png)</p><p>![image-20220303163107041](/Users/li/Library/Application Support/typora-user-images/image-20220303163107041.png)</p><p>![image-20220303173213997](/Users/li/Library/Application Support/typora-user-images/image-20220303173213997.png)</p><p>![image-20220303174909631](/Users/li/Library/Application Support/typora-user-images/image-20220303174909631.png)</p><p>![image-20220303175622282](/Users/li/Library/Application Support/typora-user-images/image-20220303175622282.png)</p><p>![image-20220303175843313](/Users/li/Library/Application Support/typora-user-images/image-20220303175843313.png)</p><p>![image-20220303180336788](/Users/li/Library/Application Support/typora-user-images/image-20220303180336788.png)</p><p>![image-20220303181228564](/Users/li/Library/Application Support/typora-user-images/image-20220303181228564.png)</p><p>![image-20220303181453146](/Users/li/Library/Application Support/typora-user-images/image-20220303181453146.png)</p><p>![image-20220303182624722](/Users/li/Library/Application Support/typora-user-images/image-20220303182624722.png)</p><p>![image-20220303192707228](/Users/li/Library/Application Support/typora-user-images/image-20220303192707228.png)</p><p>![image-20220303192930457](/Users/li/Library/Application Support/typora-user-images/image-20220303192930457.png)</p><p>![image-20220303194315047](/Users/li/Library/Application Support/typora-user-images/image-20220303194315047.png)</p><p>![image-20220303195603861](/Users/li/Library/Application Support/typora-user-images/image-20220303195603861.png)</p><p>![image-20220303195631502](/Users/li/Library/Application Support/typora-user-images/image-20220303195631502.png)</p><p>![image-20220303201533757](/Users/li/Library/Application Support/typora-user-images/image-20220303201533757.png)</p><p>![image-20220303202024282](/Users/li/Library/Application Support/typora-user-images/image-20220303202024282.png)</p><p>![image-20220303205033337](/Users/li/Library/Application Support/typora-user-images/image-20220303205033337.png)</p><div class="language-perl line-numbers-mode" data-ext="perl"><pre class="language-perl"><code><span class="token keyword">package</span> com<span class="token operator">.</span>big2333<span class="token operator">.</span>flink<span class="token punctuation">;</span>

import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>api<span class="token operator">.</span>common<span class="token operator">.</span>eventtime<span class="token operator">.</span>WatermarkStrategy<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>api<span class="token operator">.</span>common<span class="token operator">.</span>functions<span class="token operator">.</span>MapFunction<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>streaming<span class="token operator">.</span>api<span class="token operator">.</span>datastream<span class="token operator">.</span>DataStream<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>streaming<span class="token operator">.</span>api<span class="token operator">.</span>datastream<span class="token operator">.</span>DataStreamSource<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>streaming<span class="token operator">.</span>api<span class="token operator">.</span>environment<span class="token operator">.</span>StreamExecutionEnvironment<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>table<span class="token operator">.</span>api<span class="token operator">.</span>Table<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>table<span class="token operator">.</span>api<span class="token operator">.</span>Tumble<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>table<span class="token operator">.</span>api<span class="token operator">.</span>bridge<span class="token operator">.</span>java<span class="token operator">.</span>StreamTableEnvironment<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>types<span class="token operator">.</span>Row<span class="token punctuation">;</span>

import java<span class="token operator">.</span>time<span class="token operator">.</span>Duration<span class="token punctuation">;</span>

import static org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>table<span class="token operator">.</span>api<span class="token operator">.</span>Expressions<span class="token operator">.</span><span class="token variable">$;</span>
import static org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>table<span class="token operator">.</span>api<span class="token operator">.</span>Expressions<span class="token operator">.</span>lit<span class="token punctuation">;</span>

public class TableWindow <span class="token punctuation">{</span>

    public static void main<span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> throws Exception <span class="token punctuation">{</span>

        String str<span class="token operator">=</span> System<span class="token operator">.</span>getProperty<span class="token punctuation">(</span><span class="token string">&quot;user.dir&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        StreamExecutionEnvironment env <span class="token operator">=</span> StreamExecutionEnvironment<span class="token operator">.</span>getExecutionEnvironment<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        StreamTableEnvironment tableEnv <span class="token operator">=</span> StreamTableEnvironment<span class="token operator">.</span>create<span class="token punctuation">(</span>env<span class="token punctuation">)</span><span class="token punctuation">;</span>

        String path<span class="token operator">=</span>str<span class="token operator">+</span><span class="token string">&quot;/sensor.txt&quot;</span><span class="token punctuation">;</span>


        env<span class="token operator">.</span>getConfig<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span>setAutoWatermarkInterval<span class="token punctuation">(</span>200L<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token operator">//</span>env<span class="token operator">.</span>setStreamTimeCharacteristic<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        env<span class="token operator">.</span>setParallelism<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        DataStreamSource<span class="token filehandle symbol">&lt;String&gt;</span> inputstream <span class="token operator">=</span> env<span class="token operator">.</span>readTextFile<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token operator">//</span> DataStreamSource<span class="token filehandle symbol">&lt;String&gt;</span> inputstream <span class="token operator">=</span> env<span class="token operator">.</span>socketTextStream<span class="token punctuation">(</span><span class="token string">&quot;localhost&quot;</span><span class="token punctuation">,</span> <span class="token number">7777</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token regex">//</span>
<span class="token operator">//</span>         转换成 SensorReading 类型
        DataStream<span class="token filehandle symbol">&lt;SensorReading&gt;</span> dataStream <span class="token operator">=</span> inputstream<span class="token operator">.</span>map<span class="token punctuation">(</span>new MapFunction<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> SensorReading<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>


            <span class="token variable">@Override</span>
            public SensorReading map<span class="token punctuation">(</span>String <span class="token regex">s) throws Exception {

                String[] strings = s.split(&quot;,&quot;);


                return new SensorReading(strings[0],new Long(strings[1])</span><span class="token punctuation">,</span>new Float<span class="token punctuation">(</span>strings<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token operator">.</span>assignTimestampsAndWatermarks<span class="token punctuation">(</span>WatermarkStrategy<span class="token operator">.</span><span class="token filehandle symbol">&lt;SensorReading&gt;</span>forBoundedOutOfOrderness<span class="token punctuation">(</span>Duration<span class="token operator">.</span>ofSeconds<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token operator">.</span>withTimestampAssigner<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>sensor<span class="token punctuation">,</span>l<span class="token punctuation">)</span><span class="token operator">-&gt;</span>sensor<span class="token operator">.</span>getValue<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token variable">*1000</span>L<span class="token punctuation">)</span><span class="token punctuation">)</span>

                <span class="token punctuation">)</span><span class="token punctuation">;</span>


        Table eventTime <span class="token operator">=</span> tableEnv<span class="token operator">.</span>fromDataStream<span class="token punctuation">(</span>dataStream<span class="token punctuation">,</span> <span class="token variable">$(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$(</span><span class="token string">&quot;temp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token variable">$(</span><span class="token string">&quot;rowtime&quot;</span><span class="token punctuation">)</span><span class="token operator">.</span>rowtime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        Table resultTable <span class="token operator">=</span> eventTime<span class="token operator">.</span>window<span class="token punctuation">(</span>Tumble<span class="token operator">.</span>over<span class="token punctuation">(</span>lit<span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token operator">.</span>seconds<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">.</span>on<span class="token punctuation">(</span><span class="token variable">$(</span><span class="token string">&quot;rowtime&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">.</span>as<span class="token punctuation">(</span><span class="token string">&quot;tw&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token operator">.</span>groupBy<span class="token punctuation">(</span><span class="token variable">$(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$(</span><span class="token string">&quot;tw&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token operator">.</span>select<span class="token punctuation">(</span><span class="token variable">$(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$(</span><span class="token string">&quot;temp&quot;</span><span class="token punctuation">)</span><span class="token operator">.</span>avg<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token variable">$(</span><span class="token string">&quot;tw&quot;</span><span class="token punctuation">)</span><span class="token operator">.</span>end<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        tableEnv<span class="token operator">.</span>toAppendStream<span class="token punctuation">(</span>resultTable<span class="token punctuation">,</span> Row<span class="token operator">.</span>class<span class="token punctuation">)</span><span class="token operator">.</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;avg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        env<span class="token operator">.</span>execute<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>function</p><p>![image-20220304102958933](/Users/li/Library/Application Support/typora-user-images/image-20220304102958933.png)</p><p>![image-20220304103055835](/Users/li/Library/Application Support/typora-user-images/image-20220304103055835.png)</p><p>![image-20220304115249889](/Users/li/Library/Application Support/typora-user-images/image-20220304115249889.png)</p><p>![image-20220304115347828](/Users/li/Library/Application Support/typora-user-images/image-20220304115347828.png)</p><p>以上是旧版本的</p><p>新版本的如下:</p><p>![image-20220304123041238](/Users/li/Library/Application Support/typora-user-images/image-20220304123041238.png)</p><p>![image-20220304123109163](/Users/li/Library/Application Support/typora-user-images/image-20220304123109163.png)</p><div class="language-perl line-numbers-mode" data-ext="perl"><pre class="language-perl"><code><span class="token keyword">package</span> com<span class="token operator">.</span>big2333<span class="token operator">.</span>flink<span class="token punctuation">;</span>

import jdk<span class="token operator">.</span>nashorn<span class="token operator">.</span>internal<span class="token operator">.</span>codegen<span class="token operator">.</span>CompilerConstants<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>calcite<span class="token operator">.</span>util<span class="token operator">.</span>PrecedenceClimbingParser<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>api<span class="token operator">.</span>common<span class="token operator">.</span>eventtime<span class="token operator">.</span>WatermarkStrategy<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>api<span class="token operator">.</span>common<span class="token operator">.</span>functions<span class="token operator">.</span>MapFunction<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>streaming<span class="token operator">.</span>api<span class="token operator">.</span>datastream<span class="token operator">.</span>DataStream<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>streaming<span class="token operator">.</span>api<span class="token operator">.</span>datastream<span class="token operator">.</span>DataStreamSource<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>streaming<span class="token operator">.</span>api<span class="token operator">.</span>environment<span class="token operator">.</span>StreamExecutionEnvironment<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>table<span class="token operator">.</span>api<span class="token operator">.</span>Table<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>table<span class="token operator">.</span>api<span class="token operator">.</span>bridge<span class="token operator">.</span>java<span class="token operator">.</span>StreamTableEnvironment<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>table<span class="token operator">.</span>functions<span class="token operator">.</span>FunctionContext<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>table<span class="token operator">.</span>functions<span class="token operator">.</span>ScalarFunction<span class="token punctuation">;</span>
import org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>types<span class="token operator">.</span>Row<span class="token punctuation">;</span>

import java<span class="token operator">.</span>time<span class="token operator">.</span>Duration<span class="token punctuation">;</span>

import static org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>table<span class="token operator">.</span>api<span class="token operator">.</span>Expressions<span class="token operator">.</span><span class="token variable">$;</span>
import static org<span class="token operator">.</span>apache<span class="token operator">.</span>flink<span class="token operator">.</span>table<span class="token operator">.</span>api<span class="token operator">.</span>Expressions<span class="token operator">.</span>call<span class="token punctuation">;</span>

public class FuntionScalar <span class="token punctuation">{</span>

    public static void main<span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> throws Exception <span class="token punctuation">{</span>

        String str<span class="token operator">=</span> System<span class="token operator">.</span>getProperty<span class="token punctuation">(</span><span class="token string">&quot;user.dir&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        StreamExecutionEnvironment env <span class="token operator">=</span> StreamExecutionEnvironment<span class="token operator">.</span>getExecutionEnvironment<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        StreamTableEnvironment tableEnv <span class="token operator">=</span> StreamTableEnvironment<span class="token operator">.</span>create<span class="token punctuation">(</span>env<span class="token punctuation">)</span><span class="token punctuation">;</span>

        String path<span class="token operator">=</span>str<span class="token operator">+</span><span class="token string">&quot;/sensor.txt&quot;</span><span class="token punctuation">;</span>


        env<span class="token operator">.</span>getConfig<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span>setAutoWatermarkInterval<span class="token punctuation">(</span>200L<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token operator">//</span>env<span class="token operator">.</span>setStreamTimeCharacteristic<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        env<span class="token operator">.</span>setParallelism<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        DataStreamSource<span class="token filehandle symbol">&lt;String&gt;</span> inputstream <span class="token operator">=</span> env<span class="token operator">.</span>readTextFile<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token operator">//</span> DataStreamSource<span class="token filehandle symbol">&lt;String&gt;</span> inputstream <span class="token operator">=</span> env<span class="token operator">.</span>socketTextStream<span class="token punctuation">(</span><span class="token string">&quot;localhost&quot;</span><span class="token punctuation">,</span> <span class="token number">7777</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token regex">//</span>
<span class="token operator">//</span>         转换成 SensorReading 类型
        DataStream<span class="token filehandle symbol">&lt;SensorReading&gt;</span> dataStream <span class="token operator">=</span> inputstream<span class="token operator">.</span>map<span class="token punctuation">(</span>new MapFunction<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> SensorReading<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>


            <span class="token variable">@Override</span>
            public SensorReading map<span class="token punctuation">(</span>String <span class="token regex">s) throws Exception {

                String[] strings = s.split(&quot;,&quot;);


                return new SensorReading(strings[0],new Long(strings[1])</span><span class="token punctuation">,</span>new Float<span class="token punctuation">(</span>strings<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        Table table <span class="token operator">=</span> tableEnv<span class="token operator">.</span>fromDataStream<span class="token punctuation">(</span>dataStream<span class="token punctuation">,</span> <span class="token variable">$(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$(</span><span class="token string">&quot;temp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        <span class="token operator">//</span>设置传入的参数
        tableEnv<span class="token operator">.</span>getConfig<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span>addJobParameter<span class="token punctuation">(</span><span class="token string">&quot;hashcode_factor&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;31&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token operator">//</span>注册标量函数
       tableEnv<span class="token operator">.</span>createTemporarySystemFunction<span class="token punctuation">(</span><span class="token string">&quot;hashFuc&quot;</span><span class="token punctuation">,</span> HashCodeFunction<span class="token operator">.</span>class<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token operator">//</span>使用标量函数

        Table select <span class="token operator">=</span> table<span class="token operator">.</span>select<span class="token punctuation">(</span>call<span class="token punctuation">(</span><span class="token string">&quot;hashFuc&quot;</span><span class="token punctuation">,</span> <span class="token variable">$(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        tableEnv<span class="token operator">.</span>toAppendStream<span class="token punctuation">(</span>select<span class="token punctuation">,</span> Row<span class="token operator">.</span>class<span class="token punctuation">)</span><span class="token operator">.</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;scalar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        env<span class="token operator">.</span>execute<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    public static class HashCodeFunction extends ScalarFunction<span class="token punctuation">{</span>

        private int factor<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>

        public HashCodeFunction<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

        <span class="token punctuation">}</span>

        <span class="token variable">@Override</span>
        public void open<span class="token punctuation">(</span>FunctionContext context<span class="token punctuation">)</span> throws Exception <span class="token punctuation">{</span>

            factor <span class="token operator">=</span> Integer<span class="token operator">.</span>parseInt<span class="token punctuation">(</span>context<span class="token operator">.</span>getJobParameter<span class="token punctuation">(</span><span class="token string">&quot;hashcode_factor&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;12&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        public int <span class="token keyword">eval</span><span class="token punctuation">(</span>String str<span class="token punctuation">)</span><span class="token punctuation">{</span>


            <span class="token keyword">return</span> str<span class="token operator">.</span>hashCode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token variable">*factor</span><span class="token punctuation">;</span>

        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>表函数:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>big2333<span class="token punctuation">.</span>flink</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>flink<span class="token punctuation">.</span>api<span class="token punctuation">.</span>common<span class="token punctuation">.</span>functions<span class="token punctuation">.</span></span><span class="token class-name">MapFunction</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>flink<span class="token punctuation">.</span>streaming<span class="token punctuation">.</span>api<span class="token punctuation">.</span>datastream<span class="token punctuation">.</span></span><span class="token class-name">DataStream</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>flink<span class="token punctuation">.</span>streaming<span class="token punctuation">.</span>api<span class="token punctuation">.</span>datastream<span class="token punctuation">.</span></span><span class="token class-name">DataStreamSource</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>flink<span class="token punctuation">.</span>streaming<span class="token punctuation">.</span>api<span class="token punctuation">.</span>environment<span class="token punctuation">.</span></span><span class="token class-name">StreamExecutionEnvironment</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>flink<span class="token punctuation">.</span>table<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">DataTypeHint</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>flink<span class="token punctuation">.</span>table<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">FunctionHint</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>flink<span class="token punctuation">.</span>table<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">Table</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>flink<span class="token punctuation">.</span>table<span class="token punctuation">.</span>api<span class="token punctuation">.</span>bridge<span class="token punctuation">.</span>java<span class="token punctuation">.</span></span><span class="token class-name">StreamTableEnvironment</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>flink<span class="token punctuation">.</span>table<span class="token punctuation">.</span>functions<span class="token punctuation">.</span></span><span class="token class-name">FunctionContext</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>flink<span class="token punctuation">.</span>table<span class="token punctuation">.</span>functions<span class="token punctuation">.</span></span><span class="token class-name">ScalarFunction</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>flink<span class="token punctuation">.</span>table<span class="token punctuation">.</span>functions<span class="token punctuation">.</span></span><span class="token class-name">TableFunction</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>flink<span class="token punctuation">.</span>types<span class="token punctuation">.</span></span><span class="token class-name">Row</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>flink<span class="token punctuation">.</span>table<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">Expressions</span><span class="token punctuation">.</span>$<span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token import static"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>flink<span class="token punctuation">.</span>table<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">Expressions</span><span class="token punctuation">.</span><span class="token static">call</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FunctionTable</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> str<span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;user.dir&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">StreamExecutionEnvironment</span> env <span class="token operator">=</span> <span class="token class-name">StreamExecutionEnvironment</span><span class="token punctuation">.</span><span class="token function">getExecutionEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">StreamTableEnvironment</span> tableEnv <span class="token operator">=</span> <span class="token class-name">StreamTableEnvironment</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>env<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">String</span> path<span class="token operator">=</span>str<span class="token operator">+</span><span class="token string">&quot;/sensor.txt&quot;</span><span class="token punctuation">;</span>


        env<span class="token punctuation">.</span><span class="token function">getConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAutoWatermarkInterval</span><span class="token punctuation">(</span><span class="token number">200L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//env.setStreamTimeCharacteristic();</span>
        env<span class="token punctuation">.</span><span class="token function">setParallelism</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        <span class="token class-name">DataStreamSource</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> inputstream <span class="token operator">=</span> env<span class="token punctuation">.</span><span class="token function">readTextFile</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// DataStreamSource&lt;String&gt; inputstream = env.socketTextStream(&quot;localhost&quot;, 7777);</span>


<span class="token comment">//</span>
<span class="token comment">//         转换成 SensorReading 类型</span>
        <span class="token class-name">DataStream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SensorReading</span><span class="token punctuation">&gt;</span></span> dataStream <span class="token operator">=</span> inputstream<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MapFunction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">SensorReading</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>


            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">SensorReading</span> <span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>

                <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> strings <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SensorReading</span><span class="token punctuation">(</span>strings<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Long</span><span class="token punctuation">(</span>strings<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Float</span><span class="token punctuation">(</span>strings<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        <span class="token class-name">Table</span> table <span class="token operator">=</span> tableEnv<span class="token punctuation">.</span><span class="token function">fromDataStream</span><span class="token punctuation">(</span>dataStream<span class="token punctuation">,</span> $<span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> $<span class="token punctuation">(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> $<span class="token punctuation">(</span><span class="token string">&quot;temp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        <span class="token comment">//注册表函数</span>
        tableEnv<span class="token punctuation">.</span><span class="token function">createTemporarySystemFunction</span><span class="token punctuation">(</span><span class="token string">&quot;SplitFunction&quot;</span><span class="token punctuation">,</span> <span class="token class-name">SplitFunction</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//在table api里调用注册号的函数</span>

        <span class="token class-name">Table</span> select <span class="token operator">=</span> table<span class="token punctuation">.</span><span class="token function">joinLateral</span><span class="token punctuation">(</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">&quot;SplitFunction&quot;</span><span class="token punctuation">,</span> $<span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>$<span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> $<span class="token punctuation">(</span><span class="token string">&quot;temp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>$<span class="token punctuation">(</span><span class="token string">&quot;word&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> $<span class="token punctuation">(</span><span class="token string">&quot;length&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        tableEnv<span class="token punctuation">.</span><span class="token function">toAppendStream</span><span class="token punctuation">(</span>select<span class="token punctuation">,</span> <span class="token class-name">Row</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;tableFuction&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        env<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@FunctionHint</span><span class="token punctuation">(</span>output <span class="token operator">=</span> <span class="token annotation punctuation">@DataTypeHint</span><span class="token punctuation">(</span><span class="token string">&quot;ROW&lt;word STRING, length INT&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">SplitFunction</span> <span class="token keyword">extends</span> <span class="token class-name">TableFunction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Row</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>

        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">eval</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span><span class="token punctuation">{</span>

            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token operator">:</span>str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

                <span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Row</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span>s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>


        <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>


<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>![image-20220304131940941](/Users/li/Library/Application Support/typora-user-images/image-20220304131940941.png)</p>`,205),o=[e];function i(l,c){return s(),a("div",null,o)}const u=n(t,[["render",i],["__file","flink 随手笔记.html.vue"]]);export{u as default};
