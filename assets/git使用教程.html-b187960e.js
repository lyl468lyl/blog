import{_ as n,o as s,c as a,e}from"./app-133d93b2.js";const p={},i=e(`<h1 id="gitlab-使用文档" tabindex="-1"><a class="header-anchor" href="#gitlab-使用文档" aria-hidden="true">#</a> gitlab 使用文档</h1><p>用户名:root/liyulong</p><p>密码:doudou0917</p><h5 id="gitlab使用说明" tabindex="-1"><a class="header-anchor" href="#gitlab使用说明" aria-hidden="true">#</a> gitlab使用说明</h5><p>第一步：下载安装git，在官网下载安装即可</p><p>第二步：在左面空白处点击鼠标右键，点击Git Bash Here，出现对话框</p><p>第三步：配置本地仓库的账号邮箱git</p><div class="language-perl line-numbers-mode" data-ext="perl"><pre class="language-perl"><code>git config <span class="token operator">--</span>global user<span class="token operator">.</span>name  <span class="token string">&quot;liyulong&quot;</span>

git config <span class="token operator">--</span>global user<span class="token operator">.</span>email <span class="token string">&quot;liyulong@szwanggu.com&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第四步：使用ssh密钥登陆。 用下面指令生成ssh(执行命令后一路回车)</p><div class="language-perl line-numbers-mode" data-ext="perl"><pre class="language-perl"><code>$ ssh<span class="token operator">-</span>keygen <span class="token operator">-t</span> rsa <span class="token operator">-C</span> <span class="token string">&quot;liyulong@szwanggu.com&quot;</span>
根据生产命令提示<span class="token punctuation">,</span>找到公钥的生成路径
<span class="token operator">/</span>Users<span class="token regex">/li/</span><span class="token operator">.</span>ssh<span class="token operator">/</span>id_rsa<span class="token operator">.</span>pub
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第五步 使用账户登录gitlab</p><div class="language-perl line-numbers-mode" data-ext="perl"><pre class="language-perl"><code>登录url<span class="token punctuation">:</span>  http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token regex">/192.168.50.230:8060/</span>
用户名<span class="token punctuation">:</span>名字拼音<span class="token punctuation">(</span>如liyulong<span class="token punctuation">)</span>
密码<span class="token punctuation">:</span>shangjian

登录系统后<span class="token punctuation">,</span>点击头像的下拉菜单<span class="token punctuation">,</span>选择偏好设置<span class="token punctuation">,</span>找到ssh秘钥菜单
将第四步的公钥内容<span class="token punctuation">,</span>粘贴到<span class="token string">&quot;秘钥&quot;</span>框中<span class="token punctuation">,</span>如图<span class="token punctuation">:</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>![image-20221115103540380](/Users/li/Library/Application Support/typora-user-images/image-20221115103540380.png)</p><p>第六步 clone 代码测试,是否能够顺利下载代码(输入自己git库)</p><div class="language-perl line-numbers-mode" data-ext="perl"><pre class="language-perl"><code>git clone http<span class="token punctuation">:</span><span class="token operator">//</span><span class="token v-string string">192.168.50.230</span><span class="token punctuation">:</span><span class="token number">8060</span><span class="token regex">/gengda/xxx</span><span class="token operator">.</span>git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>第七步 连接远程仓库(前端/后端/算法都有对应响应的gitlab库),以前端为例:</p><div class="language-perl line-numbers-mode" data-ext="perl"><pre class="language-perl"><code>git remote add origin http<span class="token punctuation">:</span><span class="token operator">//</span><span class="token v-string string">192.168.50.230</span><span class="token punctuation">:</span><span class="token number">8060</span><span class="token regex">/gengda/sps</span><span class="token operator">-</span>vue<span class="token operator">.</span>git
注意<span class="token punctuation">:</span>如果origin 已经存在可以用如下命令删除
git remote rm origin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第八步 创建本地分支(dev)</p><div class="language-perl line-numbers-mode" data-ext="perl"><pre class="language-perl"><code><span class="token number">1</span><span class="token operator">.</span>列出所有分支
  git branch <span class="token operator">-</span>a
<span class="token number">2</span><span class="token operator">.</span>创建dev分支
  git branch dev
<span class="token number">3</span><span class="token operator">.</span>切换分支
  git checkout dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第九步 提交代码到本地仓库</p><div class="language-perl line-numbers-mode" data-ext="perl"><pre class="language-perl"><code><span class="token number">1</span><span class="token punctuation">)</span>git add <span class="token operator">.</span>  或者 git add xxx
  git add xxx ：提交指定文件；  git add <span class="token operator">.</span> 提交全部
<span class="token number">2</span><span class="token punctuation">)</span>git commit <span class="token operator">-</span><span class="token regex">m &quot;提交代码&quot;</span>   推送修改到本地git库中
  git commit <span class="token operator">-</span><span class="token regex">m &quot;添加xx文件&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第十步 提交代码到远程仓库</p><div class="language-perl line-numbers-mode" data-ext="perl"><pre class="language-perl"><code>git push origin dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,23),t=[i];function l(o,r){return s(),a("div",null,t)}const d=n(p,[["render",l],["__file","git使用教程.html.vue"]]);export{d as default};
